{
  "hash": "521f97ffe4268244d6f46a1d109c39ec",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Image Recovery with Regularized Regression\"\nsubtitle: \"Reconstructing Photographs Using the LASSO Technique\"\nauthors:\n  - name: Wanghley Soares Martins\n    affiliation: Duke University\n    roles: writing\n    corresponding: true\nbibliography: references.bib\nabstract: |\n  This paper presents a method for recovering images with missing pixel information using L1-regularized regression (LASSO).\n  We develop a block-based approach that processes images in small sections, generating basis vectors through discrete cosine\n  transforms (DCT) and optimizing the regularization parameter for each block using random subset cross-validation. Results\n  demonstrate significant recovery quality improvements compared to traditional interpolation methods, successfully preserving edge\n  details and minimizing artifacts. Performance analysis shows the effectiveness across various corruption levels and image types,\n  establishing this technique as viable for photographic recovery applications.\nexecute:\n  echo: false\n  warning: false\nformat:\n  html:\n    toc: true\n    toc-depth: 3\n    number-sections: true\n    code-fold: true\n---\n\n\n## Introduction\n\nDigital images often suffer from corruption or missing data due to transmission errors, sensor malfunctions, or storage issues.\nReconstructing these degraded images is a key challenge in image processing [@gonzalez2018digital]. Traditional interpolation-based\nmethods often fail to preserve important features, especially edges, leading to artifacts and blurring.\n\nThis paper presents an approach to image recovery using L1-regularized regression, specifically the Least Absolute Shrinkage and\nSelection Operator (LASSO) technique [@tibshirani1996regression]. Our method treats image reconstruction as a sparse signal recovery\nproblem, leveraging the compressibility of natural images in the frequency domain. The major contributions of this work include:\n\n1. A block-based framework for image recovery that processes the image in manageable sections\n2. An adaptive regularization parameter selection strategy using cross-validation\n3. Comparative analysis with interpolation and other recovery methods\n4. Performance evaluation across varying corruption levels\n\nFigures to include:\n- **Figure 1**: Example of an original image before corruption\n- **Figure 2**: Corrupted image with missing pixels\n- **Figure 3**: Illustration of the block-based processing approach\n\n## Background and Related Work\n\n### Image Recovery Techniques\n\nCommon approaches to image recovery include:\n\n- **Interpolation methods**: Bilinear, bicubic, and nearest-neighbor interpolation attempt to estimate missing pixels using surrounding values [@lehmann1999survey].\n- **Inpainting algorithms**: Methods that propagate surrounding information into missing regions [@bertalmio2000image].\n- **Compressed sensing**: Exploiting sparsity in transform domains to recover signals [@candes2006robust].\n- **Deep learning approaches**: Neural networks trained to reconstruct missing image information [@xie2012image].\n\n### LASSO Regression\n\nLASSO is a regression technique that imposes an L1-norm constraint to promote sparsity [@tibshirani1996regression]. Given observations\n$\\mathbf{y}$ and predictors $\\mathbf{X}$, the LASSO estimator minimizes:\n\n$$\\hat{\\beta} = \\arg\\min_{\\beta} \\| \\mathbf{y} - \\mathbf{X}\\beta \\|_2^2 + \\alpha \\|\\beta\\|_1$$\n\nThis makes it suitable for image recovery, where natural images tend to be sparse in a transform domain.\n\n## Methodology\n\n### Image Representation and Block Processing\n\nWe divide the image into overlapping blocks of size $K \\times K$. This approach:\n1. Reduces computational complexity\n2. Enables localized adaptation of recovery parameters\n3. Allows parallelization\n\nFigures to include:\n- **Figure 4**: Block division of an image\n\n### Basis Generation\n\nEach block is represented using 2D discrete cosine transform (DCT) basis functions:\n\n$$T_{u,v}(x,y) = \\alpha_u \\beta_v \\cos\\left(\\frac{\\pi(2x-1)(u-1)}{2K}\\right) \\cos\\left(\\frac{\\pi(2y-1)(v-1)}{2K}\\right)$$\n\nWhere:\n- $\\alpha_u, \\beta_v$ are normalization coefficients\n- $u, v$ represent spatial frequencies\n\nFigures to include:\n- **Figure 5**: Visualization of DCT basis functions\n\n### LASSO Optimization\n\nThe recovery problem for each block is formulated as:\n\n$$\\hat{\\boldsymbol{\\beta}} = \\arg\\min_{\\boldsymbol{\\beta}} \\|\\mathbf{y} - \\mathbf{\\Phi}\\boldsymbol{\\beta}\\|_2^2 + \\alpha\\|\\boldsymbol{\\beta}\\|_1$$\n\n### Regularization Parameter Selection\n\nWe employ cross-validation with random subsets to select the optimal $\\alpha$:\n1. Split available pixels into training and validation sets\n2. Fit LASSO models for different $\\alpha$ values\n3. Evaluate the mean squared error (MSE) on the validation set\n4. Choose the $\\alpha$ minimizing MSE\n\nFigures to include:\n- **Figure 6**: Cross-validation approach illustration\n\n## Results\n\nWe evaluate our method on multiple images under different corruption levels.\n\nFigures to include:\n- **Figure 7**: Example of LASSO-recovered image vs. traditional interpolation\n- **Figure 8**: MSE comparison across methods\n\n## Conclusion\n\nWe demonstrated that LASSO-based image recovery effectively reconstructs corrupted images, preserving edge details while minimizing artifacts. Future work includes exploring hybrid deep learning approaches and improving computational efficiency.\n\n## References\n\n\n```{bibliography}\n```\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}